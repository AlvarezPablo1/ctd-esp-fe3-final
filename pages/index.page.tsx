import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { Container, Grid } from "@mui/material";
import CustomPagination from "dh-marvel/components/pagination/Pagination";
import { getComics } from "dh-marvel/services/marvel/marvel.service";
import Cards from "dh-marvel/components/card/Cards";
import Image from "next/image";
import { useRouter } from "next/router";

interface Comic {
  id: number; 
  title: string;
  description: string; 
  thumbnail: Image;
}
interface Image {
  path: string;
  extension: string;
}

interface ComicsProps {
  comics: Comic[];
  totalPages: number;
  currentPage: number;
}

const itemsPerPage = 12;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
    const currentPage = query.page ? Number(query.page) : 1;
    const offset = (currentPage - 1) * itemsPerPage;
    const data = await getComics(offset, itemsPerPage);
    const comics = data.data.results;
    const totalComics = data.data.total;
    const totalPages = Math.ceil(totalComics / itemsPerPage);
  
    return {
      props: {comics,totalPages,currentPage,},
    };
  };

const Index: NextPage<ComicsProps> = ({ comics, totalPages, currentPage }) => {

  const route = useRouter();

  const handleChange = async (event: React.ChangeEvent<unknown>,page: number) => {
    await route.push(`/?page=${page}`);
  };

  return (
    <>
      <Head>
        <title>Marvel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      <Container sx={{maxWidth: "inherit!important", padding: "2rem 0",}}>
        <CustomPagination totalPages={totalPages} currentPage={currentPage} onChange={handleChange}/>
          <Grid container spacing={4} sx={{ alignItems: "stretch", marginBottom: "3rem", justifyContent: "center"}}>
            {comics.map((comic) => (
              <Grid item key={comic.id} xl={2} lg={3} md={4} sm={5} xs={10}>
                <Cards
                  thumbnail={comic.thumbnail}
                  id={comic.id}
                  title={comic.title}
                />
              </Grid>
            ))}
          </Grid>
        <CustomPagination totalPages={totalPages} currentPage={currentPage} onChange={handleChange}/>
      </Container>
    </>
  );
};

export default Index;
